#--------------------------------------------------------------------------------------------------------------------------------
# 3. Реализовать программу работы с органическими клетками.
# Необходимо создать класс Клетка.
# В его конструкторе инициализировать параметр, соответствующий количеству клеток (целое число).
# В классе должны быть реализованы методы перегрузки арифметических операторов: сложение (add()), вычитание (sub()), умножение (mul()), деление (truediv()).
# Данные методы должны применяться только к клеткам и выполнять увеличение, уменьшение, умножение и обычное (не целочисленное) деление клеток, соответственно.
# В методе деления должно осуществляться округление значения до целого числа.
# Сложение. Объединение двух клеток. При этом число ячеек общей клетки должно равняться сумме ячеек исходных двух клеток.
# Вычитание. Участвуют две клетки. Операцию необходимо выполнять только если разность количества ячеек двух клеток больше нуля, иначе выводить соответствующее сообщение.
# Умножение. Создается общая клетка из двух. Число ячеек общей клетки определяется как произведение количества ячеек этих двух клеток.
# Деление. Создается общая клетка из двух. Число ячеек общей клетки определяется как целочисленное деление количества ячеек этих двух клеток.

# В классе необходимо реализовать метод make_order(), принимающий экземпляр класса и количество ячеек в ряду.
# Данный метод позволяет организовать ячейки по рядам.
# Метод должен возвращать строку вида **\n\n***..., где количество ячеек между \n равно переданному аргументу.
# Если ячеек на формирование ряда не хватает, то в последний ряд записываются все оставшиеся.

# Например, количество ячеек клетки равняется 12, количество ячеек в ряду — 5. Тогда метод make_order() вернет строку: **\n\n.
# Или, количество ячеек клетки равняется 15, количество ячеек в ряду — 5. Тогда метод make_order() вернет строку: **\n\n***.
# -------------------------------------------------------------------------------------------------------------------------------
class Cell:

    # -------------------------------------------------------------------------------------------------------------------------------
    def __init__(self, count):
        self.__count_cells = count

    # -------------------------------------------------------------------------------------------------------------------------------
    # сложение
    def __add__(self, other):
        return Cell(self.__count_cells + other.__count_cells)

    # -------------------------------------------------------------------------------------------------------------------------------
    # вычитание
    def __sub__(self, other):
        dif = self.__count_cells - other.__count_cells
        if (dif > 0):
            return Cell(dif)
        else:
            return f'Вычитание невозможно:\n\tКоличество ячеек 1-й клетки {self.count_cells} должно быть больше, чем у 2-й {other.count_cells}'

    # -------------------------------------------------------------------------------------------------------------------------------
    # умножение
    def __mul__(self, other):
        return Cell(self.__count_cells * other.__count_cells)

    # -------------------------------------------------------------------------------------------------------------------------------
    # деление
    def __truediv__(self, other):
        return Cell(self.__count_cells // other.__count_cells)

    # -------------------------------------------------------------------------------------------------------------------------------
    # вывод
    def __str__(self):
        return str(self.__count_cells)

    # -------------------------------------------------------------------------------------------------------------------------------
    # количество ячеек
    def count(self):
        return self.__count_cells

    # --------------------------------------------------------------------------------------------------------------------------------
    # нарисовать структуру клетки
    @staticmethod
    def make_order(cell, count_in_row):

        count_rows = cell.count() // count_in_row
        cells_left = cell.count() % count_in_row

        result = ''.join([''.join(['*' for i in range(count_in_row)]) + '\n'
                            for j in range(count_rows)
                          ]
                         )
        result = result + ''.join(['*' for i in range(cells_left)])

        return result

#-------------------------------------------------------------------------------------------------------------------------------
# Основная программа
print('\nЗадание 3\n')

cell_1 = Cell(10)
cell_2 = Cell(3)
cell_3 = Cell(12)
cell_4 = Cell(15)

print(f'Сложение клеток:  Cell({cell_1}) и Cell({cell_2}) = {cell_1 + cell_2}')
print(f'Вычитание клеток: Cell({cell_1}) и Cell({cell_2}) = {cell_1 - cell_2}')
print(f'Умножение клеток: Cell({cell_1}) и Cell({cell_2}) = {cell_1 * cell_2}')
print(f'Деление клеток:   Cell({cell_1}) и Cell({cell_2}) = {cell_1 / cell_2}')
print()

print(f'Структура клетки Cell({cell_1}) - 4 ячейки в ряду:\n{cell_1.make_order(cell_1, 4)}')
print(f'Структура клетки Cell({cell_3}) - 5 ячеек в ряду:\n{cell_1.make_order(cell_3, 5)}')
print(f'Структура клетки Cell({cell_4}) - 5 ячеек в ряду:\n{cell_1.make_order(cell_4, 5)}')
