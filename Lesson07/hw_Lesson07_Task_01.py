#--------------------------------------------------------------------------------------------------------------------------------
# 1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод init()), который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц вы найдете в методичке.
# Следующий шаг — реализовать перегрузку метода str() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода add() для реализации операции сложения двух объектов класса Matrix (двух матриц).
# Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
# --------------------------------------------------------------------------------------------------------------------------------
class Matrix:

    # --------------------------------------------------------------------------------------------------------------------------------
    def __init__(self, rows):
        self.rows = rows[:]

    # --------------------------------------------------------------------------------------------------------------------------------
    # вывод матрицы
    def __str__(self):
        result = ''
        for row in self.rows:
            for column in row:
                result = result + str(column) + '\t'
            result = result + '\n'
        return result

    # --------------------------------------------------------------------------------------------------------------------------------
    # сложение двух матриц
    def __add__(self, other):
        # определяю количество строк и столбцов в новой матрице
        count_rows      = max(self.count_rows(),    other.count_rows())
        count_columns   = max(self.count_columns(), other.count_columns())

        # создаю новую пустую нулевую марицу
        mt_new = self.setsize(count_rows, count_columns)

        # заполняю новую мтарицу значениями
        for i in range(1, count_rows + 1):
            for j in range(1, count_columns + 1):

                value = self.item(i, j) + other.item(i, j)
                mt_new.setitem(i, j, value)

        return mt_new

    # --------------------------------------------------------------------------------------------------------------------------------
    # получить элемент матрицы по номеру строки и столбца
    def item(self, row, column):
        try:
            return self.rows[row - 1][column - 1]
        except:
            return 0

    # --------------------------------------------------------------------------------------------------------------------------------
    # задать элемент матрицы по номеру строки и столбца
    def setitem(self, row, column, value):
        try:
            self.rows[row - 1][column - 1] = value
        except:
            return 0

    # --------------------------------------------------------------------------------------------------------------------------------
    # получить количество строк матрицы
    def count_rows(self):
        return len(self.rows)

    # --------------------------------------------------------------------------------------------------------------------------------
    # получить количество столбцов матрицы
    def count_columns(self):
        result = 0
        for row in self.rows:
            cnt = len(row)
            if (cnt > result):
                result = cnt
        return result

    # --------------------------------------------------------------------------------------------------------------------------------
    #  новая нулевая матрица с count_row строк и count_column столбцов
    def setsize(self, count_rows=0, count_columns=0):
        new_matrix = [ [0 for j in range(count_columns)] for i in range(count_rows)]
        return Matrix(new_matrix)

# --------------------------------------------------------------------------------------------------------------------------------
# Основная программа
print('\nЗадание 1\n')

# --------------------------------------------------------------------------------------------------------------------------------
# Матрица 1
row_1 = [3, 5, 8, 6]
row_2 = [-2, 7, 1, 4]
row_3 = [5, -8, -3, 2]
list_rows_1 = [row_1, row_2, row_3]

mt1 = Matrix(list_rows_1)

print(f'Матрица 1:\n{mt1}')

# --------------------------------------------------------------------------------------------------------------------------------
# Матрица 2
row2_1 = [2, 1, -8]
row2_2 = [2, -3, 9]
row2_3 = [4, 9, -4]
row2_4 = [1, 7, 6]
row2_5 = [8, 8, 8]
list_rows_2 = [row2_1, row2_2, row2_3, row2_4, row2_5]

mt2 = Matrix(list_rows_2)

print(f'Матрица 2:\n{mt2}')

# --------------------------------------------------------------------------------------------------------------------------------
# Сложение двух матриц
mt3 = mt1 + mt2
print(f'Матрица 1 + Матрица 2:\n{mt3}')


